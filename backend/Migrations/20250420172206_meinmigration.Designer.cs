// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.dataContext;

namespace backend.Migrations
{
    [DbContext(typeof(BackendContext))]
    [Migration("20250420172206_meinmigration")]
    partial class meinmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("backend.Models.Forderung", b =>
                {
                    b.Property<Guid>("ForderungId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Betrag")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Einreichungsdatum")
                        .HasColumnType("TEXT");

                    b.Property<string>("Falligskeitdatum")
                        .HasColumnType("TEXT");

                    b.Property<string>("Forderungsart")
                        .HasColumnType("TEXT");

                    b.Property<string>("Kommentar")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("KundeId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SchuldnerId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("ForderungId");

                    b.HasIndex("KundeId");

                    b.HasIndex("SchuldnerId");

                    b.ToTable("Forderung");
                });

            modelBuilder.Entity("backend.Models.Kunde", b =>
                {
                    b.Property<Guid>("KundeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Passwort")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rolle")
                        .HasColumnType("TEXT");

                    b.Property<string>("Vorname")
                        .HasColumnType("TEXT");

                    b.HasKey("KundeId");

                    b.ToTable("Kunden");
                });

            modelBuilder.Entity("backend.Models.Schuldner", b =>
                {
                    b.Property<Guid>("SchuldnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Adresse")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Passwort")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rolle")
                        .HasColumnType("TEXT");

                    b.Property<string>("Vorname")
                        .HasColumnType("TEXT");

                    b.HasKey("SchuldnerId");

                    b.ToTable("Schuldner");
                });

            modelBuilder.Entity("backend.Models.Forderung", b =>
                {
                    b.HasOne("backend.Models.Kunde", "Kunde")
                        .WithMany()
                        .HasForeignKey("KundeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.Schuldner", "schuldner")
                        .WithMany()
                        .HasForeignKey("SchuldnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
